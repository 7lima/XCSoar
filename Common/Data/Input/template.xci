# XXX THIS DOCUMENTATION IS OUT OF DATA - FIX BEFORE RELEASE
#
# INPUT MODES
#
#	default		- The default, also map window mode
#	infobox		- Info box selected
#	*		- Any other user defined Input modes
#
# INPUT TYPE
#
# 	key		- Key press event - including APP1-6 + Keyboard	characters
#	nmea		- NMEA string
#	none		- No key assigned, use labels
#
# FUNCTIONS
#
#        AutoZoom                on, off, toggle
#        FullScreen              on, off, toggle
#        SnailTrail              on, off, long, toggle
#        VarioSound              on, off
#        Marker                  optional text to add
#        MenuButton              on, off, toggle
#        Menu                    open, close, toggle
#        MenuEntry               task, b+b, abortresume, abore, resume, pressure
#                                logger, settings, status, analysis, exit, cancel
#                                NOTE: Some of the above may be separate functions
#        Settings                (each setting, bring up to that point)
#        Bugs                    add, subtract, 0-100% (set value)
#        Ballast                 add, subtract, 0-100% (set value)
#        Zoom                    add, subtract, 0-nn (set value)
#        Wind                    up, down, 0-nn (set value, left, right, "n","ne","e","se","s","sw","w","nw"...
#        McCready                add, subtract, 0-nn (set value)
#        WaypointNext            "String" to specific waypoint
#                                eg: WayPointNext "home"
#        WayPoint???             "reverse" - reverse, from last passed back to start (ie: from here to home)
#                                "drop next" - drop the next
#                                "restore" - restore all - from start of flight but
#                                XXX This needs more thought
#        flight                  "startstop", "start", "stop", "release"
#                                Start/Stop of flight - Can be automatic, but pressing will override
#                                automatic part.
#        release                 markse the point of release from tow
#
#	 mode			 Set the mode - any arbitrary mode (eg: menu1)
#
#
# XXX NOTES
#
#	int KeyEvent[100][256];		// Points to Events location
#
#	struct {
#		XXX pointer to function	// What to execute
#		TCHAR *misc;		// Parameters
#	} EventSTRUCT;
#	EventSTRUCT Events[1024];
#	int Events_count;
#
# 	struct {
# 		TCHAR *label;
# 		int location;
#		int event;
# 	} ModeLabelSTRUCT;
# 	ModeLabelSTRUCT ModeLabel[25][100];
#
#	getModeID
#		return InputEvents::mode2int(InputEvents::getMode);
#
#	setMode...
#		Set new mode !
#		int mode = InputEvents::getModeID;
#		int i;
#		for (i = 0; i < 100; i++) {
#			if ((ModeLabel[mode][i].label != NULL) && (ModeLabel[mode][i].location > 0))
#				Label::SetLabel(
#					ModeLabel[mode][i].label,
#					ModeLabel[mode][i].location
#				);
#		}
#
#	InputEvents::eventGo(int event) {
#		XXX Execute event if valid (as per key handler now)
#
#	Change key handler to call eventGo
#
#	// NOTE: String must already be copied (allows us to use literals
#	// without taking up more data - but when loading from file must copy string
#	InputEvents::makeEvent(pointers, TCHAR *misc) {
#		Events[Events_count].event = event;
#		Events[Events_count].misc = misc;
#		Events_count++;
#		return Events_count - 1;
#	}
#
#	InputEvents::eventMode(TCHAR *misc) {
#		InputEvents::setMode(misc);
#	}

# ==============================================================================
# 4 Hardware Buttons at the bottom configuration + Bluetooth GamePad
# ==============================================================================

# ==============================================================================
# DEFAULT - Main Map window
# ==============================================================================
#
#type=key
#data=APP1
#event=Mode
#misc=test1
#mode=default
#label=
#location=1
#
#type=key
#data=APP2
#event=Mode
#misc=test2
#mode=default
#label=
#location=2
#
#type=key
#data=APP3
#event=Mode
#misc=test3
#mode=default
#label=
#location=3
#
#type=key
#data=APP4
#event=Mode
#misc=default
#mode=default
#label=
#location=4
#

# ==============================================================================
# test1
# ==============================================================================
#type=key
#data=APP1
#event=AutoZoom
#misc=toggle
#mode=test1
#label="AutoZoom"
#location=1
#
#type=key
#data=APP2
#event=ScreenMode
#misc=toggle
#mode=test1
#label="Screen Mode"
#location=2
#
#type=key
#data=APP3
#event=SnailTrail
#misc=toggle
#mode=test1
#label="Snail Trail"
#location=3


# =============================================================================
# FROM JW CODE !
# =============================================================================

# NOTE: It does not actually matter where the label goes

# ------------
# mode=default
# ------------
mode=default
type=key
data=APP1
event=MainMenu
label=
location=1
title=MainMenu
note=Here is a main menu
note=It can have any number of entries
note=Really any we want !

mode=default
type=key
data=APP2
event=StatusMessage Dropped marker
event=MarkLocation
label=
location=2
title=Drop a marker
note=Drop a marker and tell us about it

mode=default
type=key
data=APP3
event=SelectInfoBox
label=
location=3

mode=default
type=key
data=APP4
event=Mode display1
label=
location=4

mode=default
type=key
data=DOWN
event=Zoom -

mode=default
type=key
data=UP
event=Zoom +

# Always active buttons...
mode=default
type=key
data=l
event=MarkLocation

mode=default
type=key
data=r
event=ScreenModes toggle

# ------------
# mode=infobox
# ------------
mode=infobox
type=key
data=APP1
event=SelectInfoBox previous
label=<<
location=1

mode=infobox
type=key
data=APP4
event=SelectInfoBox next
label=>>
location=4

mode=infobox
type=key
data=APP2
event=ChangeInfoBoxType previous
label=<type
location=2

mode=infobox
type=key
data=APP3
event=ChangeInfoBoxType next
label=type>
location=3

mode=infobox
type=key
data=UP
event=DoInfoKey up

mode=infobox
type=key
data=DOWN
event=DoInfoKey down

mode=infobox
type=key
data=LEFT
event=DoInfoKey left

mode=infobox
type=key
data=RIGHT
event=DoInfoKey right

mode=infobox
type=key
data=RETURN
event=DoInfoKey return


# -------------
# mode=display1
# -------------
# XXX This looks wrong - why is it "clear" ? and should also be "toggle"
mode=display1
type=key
data=APP1
event=ClearWarningsAndTerrain
label="Terrain"
location=1

mode=display1
type=key
data=APP2
event=ScreenModes toggle
label="Layout"
location=2

mode=display1
type=key
data=APP3
event=Pan toggle
label="Pan"
location=3

mode=display1
type=key
data=APP4
event=Mode display2
label=".."
location=4

mode=display1 display2
type=key
data=UP
event=Pan up

mode=display1 display2
type=key
data=DOWN
event=Pan down

mode=display1 display2
type=key
data=LEFT
event=Pan left

mode=display1 display2
type=key
data=RIGHT
event=Pan right

# -------------
# mode=display2
# -------------

mode=display2
type=key
data=APP1
event=Zoom auto toggle
label="AutoZoom"
location=1

mode=display2
type=key
data=APP2
event=SnailTrail show
event=SnailTrail toggle
label="Snail Trail"
location=2

mode=display2
type=key
data=APP3
event=Sounds show
event=Sounds toggle
label="Vario Sounds"
location=3

mode=display2
type=key
data=APP4
event=Mode default
label=".."
location=4

# -------------------
# GlideComputerEvents
# -------------------
mode=default
type=gce
data=GPS_CONNECTION_WAIT
event=StatusMessage Waiting for GPS Connection

mode=default
type=gce
data=COMMPORT_RESTART
event=StatusMessage Restarting Comm Ports

mode=default
type=gce
data=GPS_FIX_WAIT
event=StatusMessage Waiting for GPS Fix

mode=default
type=gce
data=STARTUP_SIMULATOR
event=StatusMessage Simulation\r\nNothing is real!

mode=default
type=gce
data=STARTUP_REAL
event=StatusMessage Maintain effective\r\nLOOKOUT at all times

