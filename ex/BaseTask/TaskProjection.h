/* Generated by Together */

#ifndef TASKPROJECTION_H
#define TASKPROJECTION_H

#include "Navigation/Waypoint.hpp"
#include "Util/Intersection.hpp"

class TaskProjection {
public:
  TaskProjection(const GEOPOINT &ref)
  {
    reset(ref);
  }
  TaskProjection()
  {
    GEOPOINT zero;
    reset(zero);
  }
  
  void reset(const GEOPOINT &ref) {
    location_min = ref;
    location_max = ref;
    location_mid = ref;
  }
  void scan_location(const GEOPOINT &ref);
  void update_fast();

  FLAT_GEOPOINT project(const GEOPOINT& tp) const;
  GEOPOINT unproject(const FLAT_GEOPOINT& tp) const;

  FlatPoint fproject(const GEOPOINT& tp) const;
  GEOPOINT funproject(const FlatPoint& tp) const;

  unsigned project_range(const GEOPOINT &tp, const double range) const;
  double fproject_range(const GEOPOINT &tp, const double range) const;

  void report();
private:
  GEOPOINT location_min;
  GEOPOINT location_max;
  GEOPOINT location_mid;
  double cos_midloc;
};

#endif //TASKPROJECTION_H
