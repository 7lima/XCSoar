/* Generated by Together */
#ifndef TASK_H
#define TASK_H

#include "OrderedTaskPoint.hpp"
#include "StartPoint.hpp"
#include <list>
#include <vector>

class Task {
public:
  Task();
  ~Task();

  std::vector<OrderedTaskPoint*> tps;
  std::vector<TaskLeg*> legs;

  OrderedTaskPoint* getActiveTaskPoint();
  unsigned getActiveTaskPointIndex();

  void insert(OrderedTaskPoint*, unsigned position);
  void remove(unsigned position);

  void setActiveTaskPoint(unsigned);    

  virtual bool update_sample(const GEOPOINT&);

private:
  virtual void scan_distance(const GEOPOINT &location);
  void update_geometry();
  StartPoint *ts;
  unsigned activeTaskPoint;
};

#endif //TASK_H
