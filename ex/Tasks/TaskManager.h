/* Generated by Together */
class TaskPoint;

#ifndef TASKMANAGER_H
#define TASKMANAGER_H
#include "OrderedTask.h"
#include "GotoTask.h"
#include "AbortTask.h"
#include "AbstractTask.h"
#include "TaskInterface.h"
#include "Tasks/TaskInterface.h"
#include "Tasks/AbortTask.h"
#include "Tasks/GotoTask.h"
#include "Tasks/OrderedTask.h"

class TaskManager : TaskInterface {
public:
  TaskManager(): mode(MODE_NULL)
  {}    

    virtual void setActiveTaskPoint(unsigned) = 0;

    virtual TaskPoint* getActiveTaskPoint() = 0;

  enum TaskMode_t {
    MODE_NULL=0,
    MODE_ORDERED,
    MODE_ABORT,
    MODE_GOTO
  };
  
private:

    /** @link aggregation */
    OrderedTask task_ordered;

    /** @link aggregation */
    GotoTask task_goto;

    /** @link aggregation */
    AbortTask task_abort;

    TaskMode_t mode;
};
#endif //TASKMANAGER_H
