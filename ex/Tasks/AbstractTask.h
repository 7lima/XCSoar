/* Generated by Together */
#ifndef ABSTRACTTASK_H
#define ABSTRACTTASK_H

#include "Util.h"
#include "TaskInterface.h"
#include "TaskStats/TaskStats.hpp"

class AbstractTask : TaskInterface {
public:
  AbstractTask(): activeTaskPoint(0) 
  {};

    unsigned getActiveTaskPointIndex();

  virtual const TaskStats& get_stats() const {
    return stats;
  }
  bool update(const AIRCRAFT_STATE &, const AIRCRAFT_STATE&);
  
protected:
  virtual bool update_sample(const AIRCRAFT_STATE &, const AIRCRAFT_STATE&) = 0;
  
  unsigned activeTaskPoint;
  TaskStats stats;
private:
  virtual void update_stats_times(const AIRCRAFT_STATE &, const AIRCRAFT_STATE&);
  void update_stats_speeds(const AIRCRAFT_STATE &, const AIRCRAFT_STATE&);
};
#endif //ABSTRACTTASK_H
