/* Generated by Together */

#include "AbstractTask.h"
#include "Navigation/Aircraft.hpp"

unsigned AbstractTask::getActiveTaskPointIndex() 
{
  return activeTaskPoint;
}

bool
AbstractTask::update(const AIRCRAFT_STATE &state, 
                     const AIRCRAFT_STATE &state_last)
{
  bool retval;
  update_stats_times(state, state_last);
  retval = update_sample(state, state_last);
  update_stats_speeds(state, state_last);
  return retval;
}

void
AbstractTask::update_stats_speeds(const AIRCRAFT_STATE &state, 
                                  const AIRCRAFT_STATE &state_last)
{
  const double dt = state.Time-state_last.Time;
  stats.total.calc_speeds(dt);
  stats.current_leg.calc_speeds(dt);
}

void
AbstractTask::update_stats_times(const AIRCRAFT_STATE &state, 
                                 const AIRCRAFT_STATE &state_last)
{
  // default for tasks with no start time...
  stats.total.set_times(state.Time, state);
  stats.current_leg.set_times(state.Time,state);
}
