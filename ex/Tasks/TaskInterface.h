/* Generated by Together */

#ifndef TASKINTERFACE_H
#define TASKINTERFACE_H

struct AIRCRAFT_STATE;
struct GEOPOINT;

class TaskStats;
class TaskPoint;

class TaskInterface {
public:

  virtual void setActiveTaskPoint(unsigned) = 0;
  
  virtual TaskPoint* getActiveTaskPoint() = 0;

  double get_active_bearing(const AIRCRAFT_STATE &);

  double get_active_distance(const AIRCRAFT_STATE &);

  virtual void report(const AIRCRAFT_STATE &state) = 0;

  virtual bool update_idle(const AIRCRAFT_STATE &state) = 0;

  virtual bool update(const AIRCRAFT_STATE &, const AIRCRAFT_STATE&) = 0;

  virtual const TaskStats& get_stats() const = 0;

};
#endif //TASKINTERFACE_H
