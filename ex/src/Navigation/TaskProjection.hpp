/* Generated by Together */

#ifndef TASKPROJECTION_H
#define TASKPROJECTION_H

#include "GeoPoint.hpp"
#include "FlatGeoPoint.hpp"
#include "Util/Intersection.hpp"

#ifdef DO_PRINT
#include <iostream>
#endif

/**
 * Class for performing Lambeth Conformal Conic projections from
 * ellipsoidal Earth points to and from projected points.  Has
 * converters for projected coordinates in integer and double types.
 */
class TaskProjection {
public:
  TaskProjection(const GEOPOINT &ref);
  TaskProjection();
  
  void reset(const GEOPOINT &ref);
  void scan_location(const GEOPOINT &ref);
  void update_fast();

  FLAT_GEOPOINT project(const GEOPOINT& tp) const;
  GEOPOINT unproject(const FLAT_GEOPOINT& tp) const;

  FlatPoint fproject(const GEOPOINT& tp) const;
  GEOPOINT funproject(const FlatPoint& tp) const;

  unsigned project_range(const GEOPOINT &tp, const double range) const;
  double fproject_range(const GEOPOINT &tp, const double range) const;

#ifdef DO_PRINT
  friend std::ostream& operator<< (std::ostream& o, 
                                   const TaskProjection& task_projection);
#endif

private:
  GEOPOINT location_min;
  GEOPOINT location_max;
  GEOPOINT location_mid;
  double cos_midloc;
};

#endif //TASKPROJECTION_H
